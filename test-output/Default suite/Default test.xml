<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="9" hostname="SumathiLaptop" failures="0" tests="3" name="Default test" time="0.824" errors="0" timestamp="2025-03-06T15:08:26 CST">
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.009">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;String.equals(Object)&amp;quot; because &amp;quot;browser&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "String.equals(Object)" because "browser" is null
at webdrivermanager.DriverFactory.init_driver(DriverFactory.java:21)
at BaseClass.BaseTest.setup(BaseTest.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="0.001">
    <skipped/>
  </testcase> <!-- Logintest -->
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="0.0">
    <skipped/>
  </testcase> <!-- Logintest -->
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="0.0">
    <skipped/>
  </testcase> <!-- Logintest -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Stack" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Stack -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Queue" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Queue -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Graph" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Graph -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Tree" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Tree -->
  <testcase classname="testNgTests.LoginTest" name="GetStarted_DS" time="0.0">
    <ignored/>
  </testcase> <!-- GetStarted_DS -->
  <testcase classname="testNgTests.LoginTest" name="checkEmptyUserField" time="0.0">
    <ignored/>
  </testcase> <!-- checkEmptyUserField -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Linkedlist" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Linkedlist -->
  <testcase classname="testNgTests.LoginTest" name="getStarted_Array" time="0.0">
    <ignored/>
  </testcase> <!-- getStarted_Array -->
  <testcase classname="testNgTests.LoginTest" name="checkEmptyPasswordField" time="0.0">
    <ignored/>
  </testcase> <!-- checkEmptyPasswordField -->
</testsuite> <!-- Default test -->
