<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="SumathiLaptop" failures="24" tests="181" name="Test" time="1178.554" errors="0" timestamp="2025-03-06T21:50:01 CST">
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.907">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: JavaScript code failed
from unknown command: &amp;apos;Runtime.evaluate&amp;apos; wasn&amp;apos;t found
  (Session info: chrome=133.0.6943.143)
Build info: version: &amp;apos;4.27.0&amp;apos;, revision: &amp;apos;d6e718d134&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.5&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [013ecf59aec0241a2037fd453f73d687, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.143, chrome: {chromedriverVersion: 133.0.6943.141 (2a5d6da0d61..., userDataDir: C:\Users\rakhy\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49282}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49282/devtoo..., se:cdpVersion: 133.0.6943.143, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 013ecf59aec0241a2037fd453f73d687">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=133.0.6943.143)
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [013ecf59aec0241a2037fd453f73d687, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.143, chrome: {chromedriverVersion: 133.0.6943.141 (2a5d6da0d61..., userDataDir: C:\Users\rakhy\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49282}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49282/devtoo..., se:cdpVersion: 133.0.6943.143, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 013ecf59aec0241a2037fd453f73d687
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1061)
at webdrivermanager.DriverFactory.init_driver(DriverFactory.java:46)
at BaseClass.BaseTest.setup(BaseTest.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="BaseClass.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNgTests.TreeTest" name="@BeforeMethod Navigation_to_TreePage" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod Navigation_to_TreePage -->
  <testcase classname="BaseClass.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNgTests.HomeTest" name="Array" time="0.296"/>
  <testcase classname="testNgTests.HomeTest" name="DS_Introduction" time="0.252"/>
  <testcase classname="testNgTests.HomeTest" name="DataStructure_DropDown" time="0.112">
    <failure type="java.lang.AssertionError" message="expected [7] but found [6]">
      <![CDATA[java.lang.AssertionError: expected [7] but found [6]
at testNgTests.HomeTest.DataStructure_DropDown(HomeTest.java:92)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- DataStructure_DropDown -->
  <testcase classname="testNgTests.HomeTest" name="Linked_List" time="0.265"/>
  <testcase classname="testNgTests.HomeTest" name="Queue" time="0.248"/>
  <testcase classname="testNgTests.HomeTest" name="Stack" time="0.269"/>
  <testcase classname="testNgTests.HomeTest" name="Tree" time="0.258"/>
  <testcase classname="testNgTests.HomeTest" name="graph" time="0.29"/>
  <testcase classname="testNgTests.HomeTest" name="register" time="0.148"/>
  <testcase classname="testNgTests.HomeTest" name="signIn" time="0.156"/>
  <testcase classname="testNgTests.LoginTest" name="GetStarted_DS" time="1.043"/>
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="0.676"/>
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="0.691"/>
  <testcase classname="testNgTests.LoginTest" name="Logintest" time="1.098"/>
  <testcase classname="testNgTests.LoginTest" name="checkEmptyPasswordField" time="0.189"/>
  <testcase classname="testNgTests.LoginTest" name="checkEmptyUserField" time="0.184"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Array" time="1.04"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Graph" time="1.046"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Linkedlist" time="1.043"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Queue" time="0.992"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Stack" time="0.981"/>
  <testcase classname="testNgTests.LoginTest" name="getStarted_Tree" time="1.066"/>
  <testcase classname="testNgTests.Registration" name="navigatetiRegistration" time="0.312"/>
  <testcase classname="testNgTests.Registration" name="testEmptyFieldRegistration" time="0.228"/>
  <testcase classname="testNgTests.Registration" name="testExistingUser" time="0.468">
    <failure type="java.lang.AssertionError" message="expected [existing user] but found [password_mismatch:The two password fields didn’t match.]">
      <![CDATA[java.lang.AssertionError: expected [existing user] but found [password_mismatch:The two password fields didn’t match.]
at testNgTests.Registration.testExistingUser(Registration.java:53)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testExistingUser -->
  <testcase classname="testNgTests.Registration" name="testMismatchedPassword" time="30.417">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;//div[contains(@class, &amp;apos;alert&amp;apos;) and @role=&amp;apos;alert&amp;apos;]&amp;quot;}
  (Session info: chrome=133.0.6943.143)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: &amp;apos;4.27.0&amp;apos;, revision: &amp;apos;d6e718d134&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.5&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [33f02cff38bcc09d2c65061b7008d00d, findElement {value=//div[contains(@class, &amp;apos;alert&amp;apos;) and @role=&amp;apos;alert&amp;apos;], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.143, chrome: {chromedriverVersion: 133.0.6943.141 (2a5d6da0d61..., userDataDir: C:\Users\rakhy\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57760}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57760/devtoo..., se:cdpVersion: 133.0.6943.143, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 33f02cff38bcc09d2c65061b7008d00d">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(@class, 'alert') and @role='alert']"}
  (Session info: chrome=133.0.6943.143)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [33f02cff38bcc09d2c65061b7008d00d, findElement {value=//div[contains(@class, 'alert') and @role='alert'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 133.0.6943.143, chrome: {chromedriverVersion: 133.0.6943.141 (2a5d6da0d61..., userDataDir: C:\Users\rakhy\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57760}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57760/devtoo..., se:cdpVersion: 133.0.6943.143, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 33f02cff38bcc09d2c65061b7008d00d
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageobject.Registrationpage.mismatchpassworderror(Registrationpage.java:52)
at testNgTests.Registration.testMismatchedPassword(Registration.java:43)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- testMismatchedPassword -->
  <testcase classname="testNgTests.Registration" name="testRedirectToLoginPage" time="0.274"/>
  <testcase classname="testNgTests.Registration" name="testUserIdDisplay" time="0.204"/>
  <testcase classname="testNgTests.Registration" name="testValidRegistration" time="0.794"/>
  <testcase classname="testNgTests.DataStructures" name="clickDSIntrofromDropDown" time="0.13"/>
  <testcase classname="testNgTests.DataStructures" name="clickTimeComplexityTryHere" time="11.643">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.DataStructures.clickTimeComplexityTryHere(DataStructures.java:56)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTimeComplexityTryHere -->
  <testcase classname="testNgTests.DataStructures" name="navigateToPracticeQuestions" time="0.477"/>
  <testcase classname="testNgTests.DataStructures" name="navigateToTimeComplexity" time="0.227"/>
  <testcase classname="testNgTests.DataStructures" name="testPythoncode" time="1.232"/>
  <testcase classname="testNgTests.DataStructures" name="testPythoncode" time="11.409"/>
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion1" time="1.243"/>
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion1" time="1.625">
    <failure type="java.lang.AssertionError" message="expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]">
      <![CDATA[java.lang.AssertionError: expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]
at testNgTests.ArraysTest.ArrayPracticeQuestion1(ArraysTest.java:176)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- ArrayPracticeQuestion1 -->
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion2" time="1.929"/>
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion2" time="1.661">
    <failure type="java.lang.AssertionError" message="expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]">
      <![CDATA[java.lang.AssertionError: expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]
at testNgTests.ArraysTest.ArrayPracticeQuestion2(ArraysTest.java:237)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- ArrayPracticeQuestion2 -->
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion3" time="2.148"/>
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion3" time="1.678">
    <failure type="java.lang.AssertionError" message="expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]">
      <![CDATA[java.lang.AssertionError: expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]
at testNgTests.ArraysTest.ArrayPracticeQuestion3(ArraysTest.java:280)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- ArrayPracticeQuestion3 -->
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion4" time="2.093"/>
  <testcase classname="testNgTests.ArraysTest" name="ArrayPracticeQuestion4" time="1.702">
    <failure type="java.lang.AssertionError" message="expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]">
      <![CDATA[java.lang.AssertionError: expected [] but found [SyntaxError: unindent does not match any outer indentation level on line 5]
at testNgTests.ArraysTest.ArrayPracticeQuestion4(ArraysTest.java:324)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- ArrayPracticeQuestion4 -->
  <testcase classname="testNgTests.ArraysTest" name="ArraySubmittion" time="1.804"/>
  <testcase classname="testNgTests.ArraysTest" name="ArraySubmittion" time="2.248">
    <failure type="java.lang.AssertionError" message="expected [Submission Successful] but found [Error occurred during submission]">
      <![CDATA[java.lang.AssertionError: expected [Submission Successful] but found [Error occurred during submission]
at testNgTests.ArraysTest.ArraySubmittion(ArraysTest.java:206)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- ArraySubmittion -->
  <testcase classname="testNgTests.ArraysTest" name="clickApplicationsOfArray" time="0.264"/>
  <testcase classname="testNgTests.ArraysTest" name="clickArray_Dropdown" time="0.497"/>
  <testcase classname="testNgTests.ArraysTest" name="clickArraysUsingList" time="0.266"/>
  <testcase classname="testNgTests.ArraysTest" name="clickArraysinPython" time="0.397"/>
  <testcase classname="testNgTests.ArraysTest" name="clickBasicOperationsInLists" time="0.249"/>
  <testcase classname="testNgTests.ArraysTest" name="clickFindNumswithEvenNumberOfDigits" time="0.952"/>
  <testcase classname="testNgTests.ArraysTest" name="clickMaxConsecutiveones" time="1.07"/>
  <testcase classname="testNgTests.ArraysTest" name="clickPracticeQuestions" time="0.472"/>
  <testcase classname="testNgTests.ArraysTest" name="clickSearchTheArray" time="1.045"/>
  <testcase classname="testNgTests.ArraysTest" name="clickSquaresofSortedArray" time="0.959"/>
  <testcase classname="testNgTests.ArraysTest" name="clickTryHere" time="11.224">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.ArraysTest.clickTryHere(ArraysTest.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTryHere -->
  <testcase classname="testNgTests.ArraysTest" name="clickTryHere1" time="11.015">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.ArraysTest.clickTryHere1(ArraysTest.java:90)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTryHere1 -->
  <testcase classname="testNgTests.ArraysTest" name="testPythoncode" time="1.16"/>
  <testcase classname="testNgTests.ArraysTest" name="testPythoncode" time="11.226"/>
  <testcase classname="testNgTests.ArraysTest" name="testPythoncode1" time="0.889"/>
  <testcase classname="testNgTests.ArraysTest" name="testPythoncode1" time="11.075"/>
  <testcase classname="testNgTests.StackTest" name="Click_TryhereINImplementation" time="11.068">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.StackTest.Click_TryhereINImplementation(StackTest.java:95)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- Click_TryhereINImplementation -->
  <testcase classname="testNgTests.StackTest" name="Invalid_pythonCode" time="0.916"/>
  <testcase classname="testNgTests.StackTest" name="Invalid_pythonCode" time="11.199"/>
  <testcase classname="testNgTests.StackTest" name="clickApplication" time="11.117">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.StackTest.clickApplication(StackTest.java:131)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickApplication -->
  <testcase classname="testNgTests.StackTest" name="testPythoncode" time="0.949"/>
  <testcase classname="testNgTests.StackTest" name="testPythoncode" time="11.186"/>
  <testcase classname="testNgTests.LinkedList" name="DeletionNavigation" time="0.238"/>
  <testcase classname="testNgTests.LinkedList" name="Insertion" time="0.293"/>
  <testcase classname="testNgTests.LinkedList" name="PracticeQuestions" time="0.469"/>
  <testcase classname="testNgTests.LinkedList" name="clickCreatingLinkedList" time="0.231"/>
  <testcase classname="testNgTests.LinkedList" name="clickCreatingLinkedListTryHere" time="11.228">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickCreatingLinkedListTryHere(LinkedList.java:78)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickCreatingLinkedListTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickDeletionTryHere" time="11.193">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickDeletionTryHere(LinkedList.java:289)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickDeletionTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickImplementLinkedList" time="0.259"/>
  <testcase classname="testNgTests.LinkedList" name="clickImplementLinkedListTryHere" time="11.139">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickImplementLinkedListTryHere(LinkedList.java:159)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickImplementLinkedListTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickInsertionTryHere" time="11.084">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickInsertionTryHere(LinkedList.java:241)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickInsertionTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickIntroduction" time="0.267"/>
  <testcase classname="testNgTests.LinkedList" name="clickIntroductionTryHere" time="11.072">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickIntroductionTryHere(LinkedList.java:37)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickIntroductionTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickTraversal" time="0.251"/>
  <testcase classname="testNgTests.LinkedList" name="clickTraversalTryHere" time="11.109">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickTraversalTryHere(LinkedList.java:201)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTraversalTryHere -->
  <testcase classname="testNgTests.LinkedList" name="clickTypesOfLinkedList" time="0.418"/>
  <testcase classname="testNgTests.LinkedList" name="clickTypesOfLinkedListTryHere" time="11.741">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.LinkedList.clickTypesOfLinkedListTryHere(LinkedList.java:119)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTypesOfLinkedListTryHere -->
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforCreatingLinkedList" time="0.903"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforCreatingLinkedList" time="11.183"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforDeletion" time="0.885"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforDeletion" time="11.208"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforImplementLinkedList" time="0.946"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforImplementLinkedList" time="11.135"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforInsertion" time="0.934"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforInsertion" time="11.266"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforIntroduction" time="0.983"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforIntroduction" time="11.259"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforTraversal" time="0.946"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforTraversal" time="11.145"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforTypesOfLinkedList" time="0.995"/>
  <testcase classname="testNgTests.LinkedList" name="testPythonCodeforTypesOfLinkedList" time="11.207"/>
  <testcase classname="testNgTests.Graph" name="PracticeQuestions" time="0.648"/>
  <testcase classname="testNgTests.Graph" name="clickGraph" time="0.319"/>
  <testcase classname="testNgTests.Graph" name="clickGraphRepresentations" time="0.372"/>
  <testcase classname="testNgTests.Graph" name="clickGraphRepresentationsTryHere" time="11.131">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.Graph.clickGraphRepresentationsTryHere(Graph.java:79)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickGraphRepresentationsTryHere -->
  <testcase classname="testNgTests.Graph" name="clickGraphTryHere" time="11.127">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.Graph.clickGraphTryHere(Graph.java:39)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickGraphTryHere -->
  <testcase classname="testNgTests.Graph" name="testPythonCodeforGraphRepresentations" time="1.053"/>
  <testcase classname="testNgTests.Graph" name="testPythonCodeforGraphRepresentations" time="11.269"/>
  <testcase classname="testNgTests.Graph" name="testPythoncode" time="1.028"/>
  <testcase classname="testNgTests.Graph" name="testPythoncode" time="11.236"/>
  <testcase classname="testNgTests.Graph" name="testSignOut" time="0.3"/>
  <testcase classname="testNgTests.StackTest" name="clickStackfromDropDown" time="0.247"/>
  <testcase classname="testNgTests.QueueTest" name="TC_01_ImplementationofQueueinPython" time="0.238"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_OverviewOfTrees" time="0.307"/>
  <testcase classname="testNgTests.StackTest" name="OperationsIN_Stack" time="0.322"/>
  <testcase classname="testNgTests.QueueTest" name="TC_02_ImplementationOfBSTPageTryHere" time="0.806"/>
  <testcase classname="testNgTests.TreeTest" name="TC_02_OverviewOfTreesTryHere" time="0.872"/>
  <testcase classname="testNgTests.StackTest" name="clickTryHere" time="11.152">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.StackTest.clickTryHere(StackTest.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- clickTryHere -->
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationOfBSTPage" time="0.944"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationOfBSTPage" time="11.208"/>
  <testcase classname="testNgTests.TreeTest" name="TC_03_clickTryHereForEmptyvalue" time="11.19">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at testNgTests.TreeTest.TC_03_clickTryHereForEmptyvalue(TreeTest.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- TC_03_clickTryHereForEmptyvalue -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForOverviewOfTreePage" time="0.984"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForOverviewOfTreePage" time="11.181"/>
  <testcase classname="testNgTests.StackTest" name="ClickImplementation" time="0.241"/>
  <testcase classname="testNgTests.QueueTest" name="TC_01_Implementationusingcollectionsdeque" time="0.252"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_Terminologies" time="0.234"/>
  <testcase classname="testNgTests.QueueTest" name="TC_02_ImplementationusingcollectionsdequeTryHere" time="0.809"/>
  <testcase classname="testNgTests.TreeTest" name="TC_02_TerminologiesTryHere" time="0.828"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationusingcollectionsdequePage" time="0.959"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationusingcollectionsdequePage" time="11.22"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTerminologies" time="0.887"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTerminologies" time="11.2"/>
  <testcase classname="testNgTests.QueueTest" name="TC_01_Implementationusingarray" time="0.249"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_TypesofTreesPage" time="0.263"/>
  <testcase classname="testNgTests.QueueTest" name="TC_02_ImplementationusingarrayTryHere" time="0.856"/>
  <testcase classname="testNgTests.TreeTest" name="TC_02_TypesofTreesPagesTryHere" time="0.799"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationusingarrayPage" time="0.99"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForImplementationusingarrayPage" time="11.168"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTypesofTreesPage" time="0.973"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTypesofTreesPage" time="11.185"/>
  <testcase classname="testNgTests.QueueTest" name="TC_01_QueueOperations" time="0.265"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_TreeTraversalsPage" time="0.284"/>
  <testcase classname="testNgTests.QueueTest" name="TC_02_QueueOperationsTryHere" time="1.044"/>
  <testcase classname="testNgTests.TreeTest" name="TC_02_TreeTraversalsPageTryHere" time="0.98"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForQueueOperationsPage" time="1.013"/>
  <testcase classname="testNgTests.QueueTest" name="testPythoncodeForQueueOperationsPage" time="11.309"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTreeTraversalsPage" time="1.082"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTreeTraversalsPage" time="11.345"/>
  <testcase classname="testNgTests.QueueTest" name="TC_01_PracticeQuestions" time="0.501"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_TraversalsIllustrationsPage" time="0.346"/>
  <testcase classname="testNgTests.TreeTest" name="TC_02_TraversalsIllustrationsPageTryHere" time="0.978"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTraversalsIllustrationsPage" time="1.083"/>
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTraversalsIllustrationsPage" time="26.499"/>
  <testcase classname="testNgTests.TreeTest" name="TC_01_BinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_BinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_BinaryTreesPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_BinaryTreesPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_TypesOfBinaryTrees" time="0.001">
    <skipped/>
  </testcase> <!-- TC_01_TypesOfBinaryTrees -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_TypesOfBinaryTreesPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_TypesOfBinaryTreesPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTypesOfBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForTypesOfBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForTypesOfBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForTypesOfBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_ImplementationinPython" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_ImplementationinPython -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_ImplementationinPythonPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_ImplementationinPythonPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationinPythonPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationinPythonPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationinPythonPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationinPythonPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_BinaryTreeTraversals" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_BinaryTreeTraversals -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_BinaryTreeTraversalsPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_BinaryTreeTraversalsPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinaryTreeTraversalsPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinaryTreeTraversalsPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinaryTreeTraversalsPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinaryTreeTraversalsPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_ImplementationofBinaryTrees" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_ImplementationofBinaryTrees -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_ImplementationofBinaryTreesPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_ImplementationofBinaryTreesPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationofBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationofBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationofBinaryTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationofBinaryTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_ApplicationsofBinarytrees" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_ApplicationsofBinarytrees -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_ApplicationsofBinarytreesPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_ApplicationsofBinarytreesPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForApplicationsofBinarytreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForApplicationsofBinarytreesPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForApplicationsofBinarytreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForApplicationsofBinarytreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_BinarySearchTrees" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_BinarySearchTrees -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_BinarySearchTreesPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_BinarySearchTreesPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinarySearchTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinarySearchTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForBinarySearchTreesPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForBinarySearchTreesPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_01_ImplementationOfBST" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_ImplementationOfBST -->
  <testcase classname="testNgTests.TreeTest" name="TC_02_ImplementationOfBSTPageTryHere" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_ImplementationOfBSTPageTryHere -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationOfBSTPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationOfBSTPage -->
  <testcase classname="testNgTests.TreeTest" name="testPythoncodeForImplementationOfBSTPage" time="0.0">
    <skipped/>
  </testcase> <!-- testPythoncodeForImplementationOfBSTPage -->
  <testcase classname="testNgTests.TreeTest" name="TC_PracticeQuestions" time="0.0">
    <skipped/>
  </testcase> <!-- TC_PracticeQuestions -->
</testsuite> <!-- Test -->
